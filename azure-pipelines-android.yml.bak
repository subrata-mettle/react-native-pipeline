# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - master
    - releases/*
    exclude:
    - releases/old*

pool:
  vmImage: 'macos-latest'

variables:
  - group: Mobile

steps:
- checkout: self
  persistCredentials: true
  
- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSpec: '12.16.1'

- script: yarn install
  #workingDirectory: src
  displayName: 'Install node dependencies'
- script: |
    # Disable autocommit on version bump 
    yarn config set version-sign-git-tag false
    yarn config set version-git-tag false
    yarn config set version-commit-hooks false
    # Checkout branch where the build is triggered
    git checkout $(Build.SourceBranchName)
    # Extract existing version of package.json
    oldVer=$(jq -r ".version" package.json)
    # Bump version
    yarn version --patch
    # Add bumped version to staging
    git add *
    # Extract new version of package.json
    newVer=$(jq -r ".version" package.json)
    # Set environment variables
    echo "##vso[task.setvariable variable=OLD_VERSION]$oldVer"
    echo "##vso[task.setvariable variable=NEW_VERSION]$newVer"

- task: Gradle@2
  displayName: 'Build APK'
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    options: '-PversionName=$(NEW_VERSION) -PversionCode=$(Build.BuildId)'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleRelease'

- task: AndroidSigning@3
  displayName: 'Sign APK'
  inputs:
    apkFiles: '**/*.apk'
    apksignerKeystoreFile: 'my-upload-key.keystore'
    apksignerKeystorePassword: '$(AndroidKeyStorePassword)'
    apksignerKeystoreAlias: '$(AndroidKeyAlias)'
    apksignerKeyPassword: '$(AndroidKeyAliasPassword)'
    zipalign: true

- script: mv android/app/build/outputs/apk/release/app-release-unsigned.apk ReactNativePipeline$(Build.BuildNumber).apk
  displayName: 'Rename apk'

- task: PublishBuildArtifacts@1
  displayName: 'Publish APK to artifacts'
  inputs:
    pathtoPublish: ReactNativePipeline$(Build.BuildNumber).apk
    artifactName: drop
    publishLocation: 'container'

- script: |
    

    tag="mobile_$(NEW_VERSION)"
    echo "New tag $tag"
    git config --global credential.helper store
    git add *
    git commit -m "Update version from $(OLD_VERSION) to $(NEW_VERSION)"
    git tag $tag
    git pull --rebase origin $(Build.SourceBranchName)
    git push origin $(Build.SourceBranchName)
    git push --tags    
  displayName: 'Bump commit'

- script: |
    

    echo "Update version from $(OLD_VERSION) to $(NEW_VERSION)"
    
  displayName: 'Project Specific Checkout'
#- task: AppCenterDistribute@3
#  displayName: "Create a release on App Center"
#  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#  inputs:
#    serverEndpoint: 'app-center'
#    appSlug: 'stafford.williams/ReactNativePipeline-Android'
#    appFile: 'ReactNativePipeline$(Build.BuildNumber).apk'
#    releaseNotesOption: 'input'
#    releaseNotesInput: |
#      $(Build.SourceVersionMessage)
#      
#      latest source: '$(Build.SourceVersion)'
#      
#      An automated release from Azure DevOps
#    destinationType: 'groups'